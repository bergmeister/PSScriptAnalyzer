jobs:
  - ${{ each image in parameters.images }}:
    - ${{ each powerShellVersion in parameters.powerShellVersions }}:
      - job:
        displayName: ${{ format('{0} - {1}', image, powerShellVersion) }}
        pool: 
          vmImage: ${{ image }}
        steps:
        - task: DownloadPipelineArtifact@2
          displayName: 'Download Pipeline Artifact: out Folder'
          inputs:
            artifactName: out
            targetPath: '$(Build.SourcesDirectory)/out'
        - pwsh: |
            Write-Host "Installing PowerShell Preview..."
            # Use `AGENT_TEMPDIRECTORY` to make sure the downloaded PowerShell is cleaned up.
            $powerShellPath = Join-Path -Path $env:AGENT_TEMPDIRECTORY -ChildPath 'powershell'
            Invoke-WebRequest -Uri https://aka.ms/install-powershell.ps1 -OutFile ./install-powershell.ps1
            ./install-powershell.ps1 -Destination $powerShellPath -Preview
            # Using `prependpath` to update the PATH just for this build.
            Write-Host "##vso[task.prependpath]$powerShellPath"
          displayName: Install PowerShell Daily
          condition: eq('${{ powerShellVersion }}', 'Preview')
        - pwsh: '$PSVersionTable'
          displayName: Display PowerShell version information
        - task: PowerShell@2
          displayName: 'Test'
          inputs:
            targetType: inline
            pwsh: ne(variables['powerShellVersion'], 'WindowsPowerShell')
            script: |
              Import-Module .\tools\appveyor.psm1
              Invoke-AppveyorTest -CheckoutPath $env:BUILD_SOURCESDIRECTORY
        - task: PublishTestResults@2
          inputs:
            testRunner: NUnit
            testResultsFiles: 'TestResults.xml'
            condition: succeededOrFailed()